<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.corner.core.dao.SpVoucherGradedMapper" >
  <resultMap id="BaseResultMap" type="com.corner.core.beans.SpVoucherGraded" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="activeId" property="activeId" jdbcType="INTEGER" />
    <result column="tempId" property="tempId" jdbcType="INTEGER" />
    <result column="sendLimit" property="sendLimit" jdbcType="TINYINT" />
    <result column="startPrice" property="startPrice" jdbcType="DECIMAL" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, activeId, tempId, sendLimit, startPrice
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.corner.core.beans.SpVoucherGradedExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from SpVoucherGraded
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from SpVoucherGraded
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from SpVoucherGraded
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.corner.core.beans.SpVoucherGradedExample" >
    delete from SpVoucherGraded
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.corner.core.beans.SpVoucherGraded" >
    insert into SpVoucherGraded (id, activeId, tempId, 
      sendLimit, startPrice)
    values (#{id,jdbcType=INTEGER}, #{activeId,jdbcType=INTEGER}, #{tempId,jdbcType=INTEGER}, 
      #{sendLimit,jdbcType=TINYINT}, #{startPrice,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="com.corner.core.beans.SpVoucherGraded" >
    insert into SpVoucherGraded
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="activeId != null" >
        activeId,
      </if>
      <if test="tempId != null" >
        tempId,
      </if>
      <if test="sendLimit != null" >
        sendLimit,
      </if>
      <if test="startPrice != null" >
        startPrice,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="activeId != null" >
        #{activeId,jdbcType=INTEGER},
      </if>
      <if test="tempId != null" >
        #{tempId,jdbcType=INTEGER},
      </if>
      <if test="sendLimit != null" >
        #{sendLimit,jdbcType=TINYINT},
      </if>
      <if test="startPrice != null" >
        #{startPrice,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.corner.core.beans.SpVoucherGradedExample" resultType="java.lang.Integer" >
    select count(*) from SpVoucherGraded
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update SpVoucherGraded
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.activeId != null" >
        activeId = #{record.activeId,jdbcType=INTEGER},
      </if>
      <if test="record.tempId != null" >
        tempId = #{record.tempId,jdbcType=INTEGER},
      </if>
      <if test="record.sendLimit != null" >
        sendLimit = #{record.sendLimit,jdbcType=TINYINT},
      </if>
      <if test="record.startPrice != null" >
        startPrice = #{record.startPrice,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update SpVoucherGraded
    set id = #{record.id,jdbcType=INTEGER},
      activeId = #{record.activeId,jdbcType=INTEGER},
      tempId = #{record.tempId,jdbcType=INTEGER},
      sendLimit = #{record.sendLimit,jdbcType=TINYINT},
      startPrice = #{record.startPrice,jdbcType=DECIMAL}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.corner.core.beans.SpVoucherGraded" >
    update SpVoucherGraded
    <set >
      <if test="activeId != null" >
        activeId = #{activeId,jdbcType=INTEGER},
      </if>
      <if test="tempId != null" >
        tempId = #{tempId,jdbcType=INTEGER},
      </if>
      <if test="sendLimit != null" >
        sendLimit = #{sendLimit,jdbcType=TINYINT},
      </if>
      <if test="startPrice != null" >
        startPrice = #{startPrice,jdbcType=DECIMAL},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.corner.core.beans.SpVoucherGraded" >
    update SpVoucherGraded
    set activeId = #{activeId,jdbcType=INTEGER},
      tempId = #{tempId,jdbcType=INTEGER},
      sendLimit = #{sendLimit,jdbcType=TINYINT},
      startPrice = #{startPrice,jdbcType=DECIMAL}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>