<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zjjf.analysis.mapper.analysis.AnalysisSpOrderDetailMapper" >
  <resultMap id="BaseResultMap" type="com.zjjf.analysis.beans.analysis.orders.AnalysisSpOrderDetail" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="infoId" property="infoId" jdbcType="INTEGER" />
    <result column="org_pk_id" property="org_pk_id" jdbcType="VARCHAR" />
    <result column="orderId" property="orderId" jdbcType="VARCHAR" />
    <result column="itemId" property="itemId" jdbcType="VARCHAR" />
    <result column="itemBaseId" property="itemBaseId" jdbcType="INTEGER" />
    <result column="barCode" property="barCode" jdbcType="VARCHAR" />
    <result column="brand" property="brand" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="spec" property="spec" jdbcType="VARCHAR" />
    <result column="img" property="img" jdbcType="VARCHAR" />
    <result column="quantity" property="quantity" jdbcType="SMALLINT" />
    <result column="price" property="price" jdbcType="DECIMAL" />
    <result column="totalPrice" property="totalPrice" jdbcType="DECIMAL" />
    <result column="plantMemPrice" property="plantMemPrice" jdbcType="DECIMAL" />
    <result column="storeId" property="storeId" jdbcType="INTEGER" />
    <result column="addTime" property="addTime" jdbcType="TIMESTAMP" />
    <result column="isDelete" property="isDelete" jdbcType="BIT" />
    <result column="col1" property="col1" jdbcType="VARCHAR" />
    <result column="col2" property="col2" jdbcType="VARCHAR" />
    <result column="col3" property="col3" jdbcType="VARCHAR" />
    <result column="maoli" property="maoli" jdbcType="DECIMAL" />
    <result column="fee" property="fee" jdbcType="DECIMAL" />
    <result column="plantDisPrice" property="plantDisPrice" jdbcType="DECIMAL" />
    <result column="orderId2" property="orderId2" jdbcType="VARCHAR" />
    <result column="spGroupId" property="spGroupId" jdbcType="INTEGER" />
    <result column="spId" property="spId" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="youHui" property="youHui" jdbcType="VARCHAR" />
    <result column="restrict" property="restrict" jdbcType="INTEGER" />
    <result column="updateTimeStamp" property="updateTimeStamp" jdbcType="TIMESTAMP" />
    <result column="createTime" property="createTime" jdbcType="INTEGER" />
    <result column="itemBaseId" property="itemBaseId" jdbcType="INTEGER" />
    <result column="dayTime" property="dayTime" jdbcType="INTEGER" />
    <result column="gaveTime" property="gaveTime" jdbcType="VARCHAR" />
  </resultMap>
  
  <sql id="Base_Column_List" >
    id, org_pk_id, infoId, orderId, itemId, itemBaseId, barCode, brand, name, spec, img, quantity, price, 
    totalPrice, plantMemPrice, storeId, addTime, gaveTime, isDelete, col1, col2, col3, maoli, fee, 
    plantDisPrice, orderId2, spGroupId, spId, remark, youHui, `restrict`, dayTime, updateTimeStamp, 
    createTime
  </sql>
  
  <insert id ="batchAdd" parameterType="List"> 
	<![CDATA[
	   insert into analysis_sporderdetail (org_pk_id, infoId, orderId, 
	      itemId, itemBaseId, barCode, brand, 
	      name, spec, img, quantity, 
	      price, totalPrice, plantMemPrice, 
	      storeId, addTime, gaveTime, isDelete, 
	      col1, col2, col3, maoli, 
	      fee, plantDisPrice, orderId2, 
	      spGroupId, spId, remark, 
	      youHui, `restrict`, dayTime, updateTimeStamp, 
	      createTime)
	    values
	]]>
    <foreach collection ="list" item ="item" index ="index" separator =","> 
      (#{item.org_pk_id,jdbcType=VARCHAR}, #{item.infoId,jdbcType=INTEGER}, #{item.orderId,jdbcType=VARCHAR}, 
	      #{item.itemId,jdbcType=VARCHAR}, #{item.itemBaseId,jdbcType=VARCHAR}, #{item.barCode,jdbcType=VARCHAR}, #{item.brand,jdbcType=VARCHAR}, 
	      #{item.name,jdbcType=VARCHAR}, #{item.spec,jdbcType=VARCHAR}, #{item.img,jdbcType=VARCHAR}, #{item.quantity,jdbcType=SMALLINT}, 
	      #{item.price,jdbcType=DECIMAL}, #{item.totalPrice,jdbcType=DECIMAL}, #{item.plantMemPrice,jdbcType=DECIMAL}, 
	      #{item.storeId,jdbcType=INTEGER}, #{item.addTime,jdbcType=TIMESTAMP}, #{item.gaveTime,jdbcType=TIMESTAMP}, #{item.isDelete,jdbcType=BIT}, 
	      #{item.col1,jdbcType=VARCHAR}, #{item.col2,jdbcType=VARCHAR}, #{item.col3,jdbcType=VARCHAR}, #{item.maoli,jdbcType=DECIMAL}, 
	      #{item.fee,jdbcType=DECIMAL}, #{item.plantDisPrice,jdbcType=DECIMAL}, #{item.orderId2,jdbcType=VARCHAR}, 
	      #{item.spGroupId,jdbcType=INTEGER}, #{item.spId,jdbcType=VARCHAR}, #{item.remark,jdbcType=VARCHAR}, 
	      #{item.youHui,jdbcType=VARCHAR}, #{item.restrict,jdbcType=INTEGER}, #{item.dayTime,jdbcType=INTEGER}, #{item.updateTimeStamp,jdbcType=TIMESTAMP}, 
	      #{item.createTime,jdbcType=INTEGER})
    </foreach> 
  </insert>

  <insert id="insert" parameterType="com.zjjf.analysis.beans.analysis.orders.AnalysisSpOrderDetail" >
    insert into analysis_sporderdetail (id, org_pk_id, infoId, orderId, 
      itemId, itemBaseId,  barCode, brand, 
      name, spec, img, quantity, 
      price, totalPrice, plantMemPrice, 
      storeId, addTime, gaveTime, isDelete, 
      col1, col2, col3, maoli, 
      fee, plantDisPrice, orderId2, 
      spGroupId, spId, remark, 
      youHui, `restrict`, cityId, cityName, areaId, areaName, spGroupName, storeName, supplierName, dayTime, updateTimeStamp, 
      createTime)
    values (#{id,jdbcType=INTEGER}, #{org_pk_id,jdbcType=VARCHAR}, #{infoId,jdbcType=INTEGER}, #{orderId,jdbcType=VARCHAR}, 
      #{itemId,jdbcType=VARCHAR}, #{itemBaseId,jdbcType=VARCHAR}, #{barCode,jdbcType=VARCHAR}, #{brand,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{spec,jdbcType=VARCHAR}, #{img,jdbcType=VARCHAR}, #{quantity,jdbcType=SMALLINT}, 
      #{price,jdbcType=DECIMAL}, #{totalPrice,jdbcType=DECIMAL}, #{plantMemPrice,jdbcType=DECIMAL}, 
      #{storeId,jdbcType=INTEGER}, #{addTime,jdbcType=TIMESTAMP}, #{gaveTime,jdbcType=TIMESTAMP}, #{isDelete,jdbcType=BIT}, 
      #{col1,jdbcType=VARCHAR}, #{col2,jdbcType=VARCHAR}, #{col3,jdbcType=VARCHAR}, #{maoli,jdbcType=DECIMAL}, 
      #{fee,jdbcType=DECIMAL}, #{plantDisPrice,jdbcType=DECIMAL}, #{orderId2,jdbcType=VARCHAR}, 
      #{spGroupId,jdbcType=INTEGER}, #{spId,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, 
      #{youHui,jdbcType=VARCHAR}, #{restrict,jdbcType=INTEGER},
      #{cityId,jdbcType=INTEGER}, #{cityName,jdbcType=VARCHAR}, #{areaId,jdbcType=INTEGER}, #{areaName,jdbcType=VARCHAR}, 
      #{spGroupName,jdbcType=VARCHAR}, #{storeName,jdbcType=VARCHAR}, #{supplierName,jdbcType=VARCHAR}, #{dayTime,jdbcType=INTEGER},
      #{updateTimeStamp,jdbcType=TIMESTAMP}, #{createTime,jdbcType=INTEGER})
  </insert>
  
  <select id="getDetailDataByInfoId"  resultMap="BaseResultMap" parameterType="java.lang.Integer" >
     select <include refid="Base_Column_List" /> from analysis_sporderdetail where infoId = #{infoId}
  </select>
    
  <select id="getDataByIndex_s" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select <include refid="Base_Column_List" /> from analysis_sporderdetail id &gt; #{id} order by id limit 1000
  </select>
  
  <select id="getByOrgPkId" resultMap="BaseResultMap" parameterType="java.lang.String" >
     select <include refid="Base_Column_List" /> from analysis_sporderdetail where org_pk_id = #{org_pk_id}
  </select>
  
  <update id="updateBean" parameterType="com.zjjf.analysis.beans.analysis.orders.AnalysisSpOrderDetail" >
    update analysis_sporderdetail
    <set >
      <if test="infoId != null" >
        infoId = #{infoId},
      </if>
    </set>
    where id = #{id}
  </update>
  
  <select id="getPlantItemList" resultType="com.zjjf.analysis.beans.analysis.orders.AnalysisSpOrderDetail" parameterType="java.util.Map" >
     select itemId, itemBaseId, spGroupId from analysis_sporderdetail where `dayTime` = #{dayTime} group by itemId, spGroupId order by null limit #{offset}, 1000 
  </select>
  
  <select id="getTurnOverByItemId" resultType="com.zjjf.analysis.beans.origin.orders.SpOrderDetailVo" parameterType="java.lang.String" >
   	select  sum(t1.totalPrice) as "turnover", 
   			sum(t1.quantity) as "quantity",
   			sum(t1.maoli) as "maoli",
   			sum(t1.fee) as "fee",
   			count(t1.id) as "orderCount",
   			t1.price,
   			t1.itemId
   		from analysis_sporderdetail t1 where t1.itemId = #{itemId} and t1.spGroupId = #{spGroupId} and dayTime=#{dayTime}
  </select>
  
</mapper>