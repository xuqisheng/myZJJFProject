<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.corner.salesman.dao.ReportMarkReadMapper" >
  <resultMap id="BaseResultMap" type="com.corner.salesman.model.ReportMarkRead" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="reportId" property="reportId" jdbcType="VARCHAR" />
    <result column="userId" property="userId" jdbcType="VARCHAR" />
    <result column="createTime" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, reportId, userId, createTime
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from tbl_report_mark_t
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tbl_report_mark_t
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.corner.salesman.model.ReportMarkRead" >
    insert into tbl_report_mark_t (id, reportId, userId, 
      createTime)
    values (#{id,jdbcType=INTEGER}, #{reportId,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.corner.salesman.model.ReportMarkRead" >
    insert into tbl_report_mark_t
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="reportId != null" >
        reportId,
      </if>
      <if test="userId != null" >
        userId,
      </if>
      <if test="createTime != null" >
        createTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="reportId != null" >
        #{reportId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.corner.salesman.model.ReportMarkRead" >
    update tbl_report_mark_t
    <set >
      <if test="reportId != null" >
        reportId = #{reportId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        userId = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.corner.salesman.model.ReportMarkRead" >
    update tbl_report_mark_t
    set reportId = #{reportId,jdbcType=VARCHAR},
      userId = #{userId,jdbcType=VARCHAR},
      createTime = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  
  <delete id="deleteReportMarkById" parameterType="com.corner.salesman.model.ReportMarkRead" >
    delete from tbl_report_mark_t
     where reportId = #{reportId,jdbcType=VARCHAR} 
       and userId = #{userId,jdbcType=VARCHAR}
  </delete>
  
  <select id="findReportMarkRecordById" resultType="java.lang.String" parameterType="java.lang.String" >
		SELECT
			GROUP_CONCAT(u.userName) AS participant
		FROM
			tbl_report_mark_t t
		LEFT JOIN salesman u ON t.userId = u.id
		WHERE t.reportId = #{reportId}
  </select>
</mapper>